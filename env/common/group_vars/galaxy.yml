# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python36-virtualenv    # usegalaxy_eu.certbot
pip_package: python3-pip                               # geerlingguy.pip


# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /srv/galaxy

galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_20.01
galaxy_config_style: yaml
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: "4.6.14"

galaxy_file_path: /data

galaxy_config:
  galaxy:
    brand: "NeLS Galaxy"
    admin_users: "{{galaxy_admin}}"
    master_api: gAlAxy
    enable_beta_gdpr: true
    database_connection: "{{db_connection}}"
    file_path: "{{ galaxy_file_path }}"
    check_migrate_tools: false
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    job_metrics_config_file: "{{ galaxy_config_dir }}/job_metrics_conf.xml"
    interactivetools_enable: "True"
    interactivetools_map: "{{ gie_proxy_sessions_path }}"
    log_level: INFO
    allow_path_paste: true
    #    require_login: true
    allow_user_impersonation: true

    welcome_url: static/welcome.html
    support_url: https://elixir.no/helpdesk
    terms_url: https://{{galaxy_host}}/galaxy-terms/
    statsd_host: localhost
    statsd_influxdb: true
    id_secret: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62306463646165326238323064633339333430363634356635613661613830653231323731666333
          3932366531646532326339636233376430353432616339370a613334663534383630383363353037
          31323962613436333463346634396164363030633238386562373831393064323533356637373336
          6463383138366132650a383632636465363439383832383538666665386265386236626461333464
          65336137396531366632396137316237376566366161386162356563643762643436

    message_box_visible: true
    message_box_class: warning
    message_box_content: This is the development version of the new usegalaxy.no website. Not for production use!
  uwsgi:
    # Default values
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

galaxy_systemd_zergling_env: DRMAA_LIBRARY_PATH=/usr/lib64/libdrmaa.so.1

galaxy_config_files:
  - src: files/galaxy/config/job_metrics_conf.xml
    dest: "{{ galaxy_config['galaxy']['job_metrics_config_file'] }}"

galaxy_tool_config_files:
  - "{{ galaxy_server_dir }}/config/tool_conf.xml.sample"
  - "{{ galaxy_config_dir }}/tool_conf_interactive.xml"

galaxy_config_templates:
  - src: templates/galaxy/config/job_conf.xml
    dest: "{{ galaxy_config['galaxy']['job_config_file'] }}"
  - src: templates/galaxy/config/reports.yml
    dest: "{{ galaxy_config_dir }}/reports.yml"

# systemd
galaxy_systemd_mode: mule
galaxy_systemd_reports: true
galaxy_zergpool_listen_addr: 127.0.0.1:8080
galaxy_restart_handler_name: "Restart Galaxy"


# Interactive Tools
docker_install_compose: false
docker_users:
  - "{{ galaxy_user.name }}"
gie_proxy_dir: /srv/galaxy/gie-proxy/proxy
gie_proxy_git_version: ie2
gie_proxy_setup_nodejs: nodeenv
gie_proxy_virtulenv_command: "{{ pip_virtualenv_command }}"
gie_proxy_nodejs_version: "10.13.0"
gie_proxy_virtualenv: /srv/galaxy/gie-proxy/venv
gie_proxy_setup_service: systemd
gie_proxy_sessions_path: "{{ galaxy_mutable_data_dir }}/interactivetools_map.sqlite"


# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
 - "{{ inventory_hostname }}"
#-   - "*.interactivetoolentrypoint.interactivetool.{{ inventory_hostname }}"
#certbot_dns_provider: rfc2136
#certbot_dns_credentials:
#  server: ns-training.galaxyproject.org
#  port: 53
#  name: certbot-training.
#  secret: <SECRET PROVIDED BY INSTRUCTOR>
#  algorithm: HMAC-SHA512
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - server_status
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
  - galaxy-gie-proxy
nginx_conf_http:
  client_max_body_size: 1g
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem


cvmfs_role: client
galaxy_cvmfs_repos_enabled: config-repo
cvmfs_quota_limit: 6000


custom_telegraf_env: "/usr/bin/env GDPR_MODE=1 GALAXY_ROOT=/srv/galaxy/ GALAXY_CONFIG_FILE=/srv/galaxy/config/galaxy.yml PGDATABASE={{galaxy_database}} PGHOST={{db_host}}"
custom_telegraf_gxadmin_bin: /usr/local/bin/gxadmin
custom_telegraf_slurm_collect_bin: /usr/local/bin/slurm-collect
telegraf_plugins_extra:
  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - metric_separator = "."
      - allowed_pending_messages = 10000
  monitor_galaxy_queue:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery queue-overview --short-tool-id"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "30s"
# Some custom galaxy monitoring stuff
  galaxy_uploaded:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery upload-gb-in-past-hour"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1h"
  galaxy_lastlog:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} uwsgi lastlog"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "30s"
  galaxy_jobs_queued:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery jobs-queued"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
  galaxy_jobs_queued_internal:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery jobs-queued-internal-by-handler"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
  galaxy_oidc:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery users-with-oidc"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
  postgres_extra:
    plugin: "exec"
    config:
      - commands = [
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-cache-hit",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-index-size",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-index-usage",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-table-bloat",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-table-size",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-unused-indexes",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-vacuum-stats",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-stat-bgwriter",
          "{{ custom_telegraf_env }} {{ custom_telegraf_gxadmin_bin }} iquery pg-stat-user-tables",
        ]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "1m"
  slurm:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_slurm_collect_bin }}"]
      - data_format = "influx"
  nginx:
    config:
      - urls = ["http://localhost:9096/server_status"]
