#- name: Disable SELinux # Is this needed?
#  selinux:
#    state: disabled

- name: Add branding
  copy:
    src: templates/galaxy/static/
    dest: "{{ galaxy_root }}/server/static/"
    owner: root
    group: root
    mode: '0644'
#    force: yes

- name: add client scss
  copy:
    src: templates/galaxy/client/blue.scss
    dest: "{{ galaxy_root }}/server/client/galaxy/style/scss/theme/blue.scss"
    owner: root
    group: root
    mode: '0644'
#    force: yes
  register: scss_file

- name: rebuild client
  make:
    chdir: "{{ galaxy_server_dir }}"
    target: "{{ galaxy_client_make_target }}"
  environment:
    PATH: "{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
    VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
  when: scss_file.changed

- name: Make sure compliance log exists
  file:
    path: "{{ galaxy_root }}/server/compliance.log"
    state: touch
    mode: "0600"
    owner: "{{ galaxy_user.name }}"

# For gxadmin:
- name: Add env vars in bashrc
  become: true
  become_user: galaxy
  lineinfile:
    path: "~/.bashrc"
    regexp: "^export {{ item.var }}"
    line: "export {{ item.var }}={{ item.val }}"
  with_items:
    - var: GDPR_MODE
      val: '$(openssl rand -hex 24 2>/dev/null)'
    - var: GALAXY_CONFIG_DIR
      val: '{{ galaxy_root }}/config'
    - var: GALAXY_CONFIG_FILE
      val: '{{ galaxy_root }}/config/galaxy.yml'
    - var: PGUSER
      val: '{{ galaxy_db_user }}'
    - var: PGHOST
      val: '{{ groups["database"][0] }}'
    - var: PGDATABASE
      val: '{{ galaxy_database }}'
    - var: INFLUX_URL
      val: '{{ telegraf_urls }}'
    - var: INFLUX_PASS
      val: '{{ telegraf_password }}'
    - var: INFLUX_USER
      val: '{{ telegraf_username }}'
    - var: INFLUX_DB
      val: '{{ telegraf_database }}'

- name: Copy using the 'content' for inline data
  become: true
  become_user: galaxy
  copy:
    content: |
      {{ groups['database'][0] }}:5432:*:{{ galaxy_db_user }}:{{ galaxy_db_passwd }}
    dest: "~/.pgpass"
    mode: 0600

- name: Copy slurm telegraf plugin
  copy:
    src: files/telegraf/slurm-collect.sh
    dest: "{{ custom_telegraf_slurm_collect_bin }}"
    owner: root
    group: root
    mode: '0755'

- name: Allow nginx httpd_sys_content_t to access the static files
  sefcontext:
    target: "{{ item }}(/.*)?"
    setype: httpd_sys_content_t
    state: present
  register: update_fcontexts
  with_items: "{{ galaxy_selinux_web_access_dirs }}"

- name: Apply new SELinux file context to filesystem
  command: "restorecon -rv {{ item }}"
  with_items: "{{ galaxy_selinux_web_access_dirs }}"
  when: update_fcontexts.changed
