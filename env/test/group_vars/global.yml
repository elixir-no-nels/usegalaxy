domain: usegalaxy.no
env: testing

system_groups:
  - { name: galaxy, gid: 1024, group_names: ['galaxyserver', 'slurm'] }
  - { name: slurm, gid: 1025, group_names: ['galaxyserver', 'slurm'] }
  - { name: galaxyadmin, gid: 1026, group_names: ['all']} #just for the sudoers file.
  - { name: sysadmin, gid: 1027, group_names: ['all']}
  - { name: docker, gid: 1028, group_names: ['galaxyserver', 'slurm']}

system_users:
  - { name: galaxy, uid: 1024, group: galaxy, shell: /bin/bash, create_home: yes, groups: ['docker'], group_names: ['galaxyserver', 'slurm'] }
  - { name: slurm, uid: 1025, group: slurm, shell: /sbin/nologin, create_home: no, group_names: ['galaxyserver', 'slurm'] }
  - { name: galaxyadmin, uid: 1026, group: galaxyadmin, shell: /bin/bash, create_home: yes, group_names: ['galaxyserver'] }
  - { name: sysadmin, uid: 1027, group: sysadmin, shell: /bin/bash, create_home: yes, group_names: ['all'] }
  
galaxy_host: "{{ groups['galaxyserver'][0] }}"
galaxy_ip: "{{ hostvars[galaxy_host].ansible_host }}"

galaxy_admin_email_to: "admin@usegalaxy.no"
galaxy_admin_email_from: "admin@usegalaxy.no"
galaxy_admin: "admin@usegalaxy.no, torfinn.nome@nmbu.no"

db_host: "{{ groups['database'][0] }}"
db_ip: "{{ hostvars[db_host].ansible_host }}"
galaxy_db_user: "galaxy"
galaxy_database: "galaxy-test"

slurm_host: "{{ groups['slurm'][0] }}"
slurm_ip: "{{ hostvars[slurm_host].ansible_host }}"

# variables generated based on the information above, should only need to edit in extreme cases
db_connection: "postgresql://{{galaxy_db_user}}:{{galaxy_db_passwd}}@{{db_host}}/{{galaxy_database}}"
# certs for the frontend
#ssl_cert: "/etc/letsencrypt/live/{{galaxy_host}}/fullchain.pem"
#ssl_key: "/etc/letsencrypt/live/{{galaxy_host}}/privkey.pem"
#ssl_chain: "/etc/letsencrypt/live/{{galaxy_host}}/chain.pem"

cvmfs0_host: "{{ groups['cvmfsstratum0servers'][0] }}"
cvmfs0_ip: "{{ hostvars[cvmfs0_host].ansible_host }}"

gpg_key_name: admin@usegalaxy.no

# Install the latest version of Telegraf
telegraf_agent_package_state: latest

# Configure the output to point to an InfluxDB
# running on localhost, and # place data in the
# database "telegraf" which will be created if need be.
telegraf_agent_output:
  - type: influxdb
    config:
    - urls = ["https://maas-test.bioinfo.no/influx/"]
    - database = "usegalaxy"
    - username = "usegalaxy"
    - password = "{{ telegraf_password }}"

# The default plugins, applied to any telegraf-configured host
telegraf_plugins_default:
  - plugin: cpu
  - plugin: disk
  - plugin: kernel
  - plugin: processes
  - plugin: io
  - plugin: mem
  - plugin: system
  - plugin: swap
  - plugin: net
  - plugin: netstat

  # system.yml
dhclient_interface: "{{ ansible_default_ipv4.interface }}"
dhclient_config:
  - "timeout 300;"
  - "retry 60;"
  - "supersede domain-search \"usegalaxy.no\";"

# Postfix
#postfix_relayhost: smtp.uib.no # TODO: Make sure this works
#postfix_aliases:
#  - user: root
#    alias: torfinn.nome@nmbu.no

# Sudo access
sudo_defaults:
  - name: telegraf
    defaults: '!logfile, !syslog, !pam_session'
sudo_users:
      - name: telegraf
        nopasswd: yes
        commands:
          - '/usr/bin/fail2ban-client status'
          - '/usr/bin/fail2ban-client status *'
