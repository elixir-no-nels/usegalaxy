---
# PostgreSQL
postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy

# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /opt/galaxy_dist
galaxy_server_dir: "{{ galaxy_root }}/server"
galaxy_file_path: /opt/galaxy_data
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_19.05
galaxy_config_style: yaml
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
supervisor_socket_user: galaxy
supervisor_socket_chown: galaxy
galaxy_restart_handler_name: Restart Galaxy

galaxy_config:
  galaxy:
    brand: "NELS Galaxy"
    admin_users: kim.brugger@uib.no
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    file_path: "{{ galaxy_file_path }}"
    check_migrate_tools: false

  uwsgi:
    # Default values
    #http: 0.0.0.0:8080
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

supervisor_programs:
  - name: galaxy
    state: present
    command: uwsgi --yaml {{ galaxy_config_dir }}/galaxy.yml
    configuration: |
      autostart=true
      autorestart=true
      startretries=1
      startsecs=10
      user=galaxy
      umask=022
      directory={{ galaxy_server_dir }}
      environment=HOME={{ galaxy_mutable_data_dir }},VIRTUAL_ENV={{ galaxy_venv_dir }},PATH={{ galaxy_venv_dir }}/bin:%(ENV_PATH)s


# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --standalone # --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
#certbot_environment: staging
certbot_well_known_root: /opt/galaxy_dist/server/static/.well
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
  systemctl restart nginx || true
certbot_domains:
  - "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 1g
nginx_remove_default_vhost: true
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/letsencrypt/live/test.usegalaxy.no/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/letsencrypt/live/test.usegalaxy.no/privkey.pem
